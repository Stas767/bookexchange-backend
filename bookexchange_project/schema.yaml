openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/books/:
    get:
      operationId: listBookCards
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/BookCards'
          description: ''
      tags:
      - api
    post:
      operationId: createBookCard
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookCards'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BookCards'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BookCards'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookCards'
          description: ''
      tags:
      - api
  /api/v1/books/{id}/:
    get:
      operationId: retrieveBookCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book card.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookCards'
          description: ''
      tags:
      - api
    put:
      operationId: updateBookCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book card.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookCards'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BookCards'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BookCards'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookCards'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBookCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book card.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookCards'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BookCards'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BookCards'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookCards'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBookCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book card.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/favorites/:
    get:
      operationId: listFavorites
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Favorites'
          description: ''
      tags:
      - api
    post:
      operationId: createFavorites
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Favorites'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Favorites'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Favorites'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favorites'
          description: ''
      tags:
      - api
  /api/v1/favorites/{id}/:
    get:
      operationId: retrieveFavorites
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this favorites.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favorites'
          description: ''
      tags:
      - api
    put:
      operationId: updateFavorites
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this favorites.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Favorites'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Favorites'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Favorites'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favorites'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateFavorites
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this favorites.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Favorites'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Favorites'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Favorites'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favorites'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyFavorites
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this favorites.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/auth/jwt/create/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/v1/auth/jwt/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
  /api/v1/auth/jwt/verify/:
    post:
      operationId: createTokenVerify
      description: 'Takes a token and indicates if it is valid.  This view provides
        no

        information about a token''s fitness for a particular use.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
      tags:
      - api
components:
  schemas:
    BookCards:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        publisher:
          type: integer
        book_title:
          type: string
          description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043D\u0430\u0437\
            \u0432\u0430\u043D\u0438\u0435 \u043F\u0440\u043E\u0438\u0437\u0432\u0435\
            \u0434\u0435\u043D\u0438\u044F"
          maxLength: 255
        author_name:
          type: string
          description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0438\u043C\u044F\
            \ \u0430\u0432\u0442\u043E\u0440\u0430"
          maxLength: 255
        genre:
          type: string
          nullable: true
          description: "\u041A\u0430\u043A\u043E\u0439 \u0436\u0430\u043D\u0440 \u0443\
            \ \u043A\u043D\u0438\u0433\u0438?"
          maxLength: 255
        book_description:
          type: string
          description: "\u041E \u0447\u0435\u043C \u044D\u0442\u0430 \u043A\u043D\u0438\
            \u0433\u0430?"
          maxLength: 1000
        book_image:
          type: string
          format: binary
          nullable: true
          description: "\u041F\u0440\u0438\u043B\u043E\u0436\u0438\u0442\u0435 \u0444\
            \u043E\u0442\u043E\u0433\u0440\u0430\u0444\u0438\u044E \u043A\u043D\u0438\
            \u0433\u0438"
        isbn:
          type: string
          description: "ISBN - \u044D\u0442\u043E \u0443\u043D\u0438\u043A\u0430\u043B\
            \u044C\u043D\u044B\u0439 \u0438\u043D\u0434\u0435\u043D\u0442\u0438\u0444\
            \u0438\u043A\u0430\u0442\u043E\u0440 \u043A\u043D\u0438\u0433\u0438. \u041E\
            \u043D \u043C\u043E\u0436\u0435 \u0431\u044B\u0442\u044C \u0443\u043A\u0430\
            \u0437\u0430\u043D \u043D\u0430 \u043F\u0435\u0440\u0432\u043E\u0439 \u0441\
            \u0442\u0440\u0430\u043D\u0438\u0446\u0435 \u0438\u043B\u0438 \u0441 \u043E\
            \u0431\u0440\u0430\u0442\u043D\u043E\u0439 \u0441\u0442\u043E\u0440\u043E\
            \u043D\u044B \u043A\u043D\u0438\u0433\u0438."
          maxLength: 100
        condition:
          enum:
          - "\u041D\u043E\u0432\u044B\u0439/(\u0430\u044F)"
          - "\u041A\u0430\u043A \u043D\u043E\u0432\u044B\u0439/(\u0430\u044F)"
          - "\u041E\u0447\u0435\u043D\u044C \u0445\u043E\u0440\u043E\u0448\u0435\u0435"
          - "\u0414\u043E\u0441\u0442\u043E\u0439\u043D\u043E\u0435"
          - "\u041F\u0440\u0438\u0435\u043C\u043B\u0435\u043C\u043E\u0435"
          - "\u041F\u0440\u0430\u043A\u0442\u0438\u0447\u0435\u0441\u043A\u0438 \u043F\
            \u0440\u0438\u0435\u043C\u043B\u0435\u043C\u043E\u0435"
          type: string
          description: "\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0438\u0437\
            \ \u0441\u043F\u0438\u0441\u043A\u0430 \u0441\u043E\u0441\u0442\u043E\u044F\
            \u043D\u0438\u0435 \u0434\u0430\u043D\u043D\u043E\u0433\u043E \u044D\u043A\
            \u0437\u0435\u043C\u043F\u043B\u044F\u0440\u0430."
        year:
          type: integer
      required:
      - publisher
      - book_title
      - author_name
      - book_description
      - isbn
    Favorites:
      type: object
      properties:
        book_card:
          type: integer
        user:
          type: integer
      required:
      - book_card
      - user
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
      required:
      - token
